openapi: 3.0.3
info:
  title: Auth APIs
  description: |-
    Dparty
  contact:
    email: chenyunda218@gmail.com
  version: 0.0.2
servers:
  - url: https://auth.sum-foods.com
  - url: https://auth-uat.sum-foods.com
tags:
  - name: Account
  - name: Restaurant
paths:
  /account:
    get:
      tags:
        - Account
      description: Get account detail
      operationId: GetAccount
      responses:
        '200':
          description: Success get account detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  /sessions:
    post:
      tags:
        - Account
      description: Create Login session
      operationId: CreateSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
      responses:
        '201':
          description: 'Account created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
  /account/password:
    put:
      tags:
        - Account
      operationId: UpdatePassword
      description: Update password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
      responses:
        '204':
          description: 'Updated'
  /accounts:
    post:
      tags:
        - Account
      description: Create user account
      operationId: CreateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        '201':
          description: 'Account created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    get:
      tags:
        - Account
      description: Create user account
      operationId: ListAccount
      parameters:
        - $ref: '#/components/parameters/Ordering'
        - $ref: '#/components/parameters/IndexParam'
        - $ref: '#/components/parameters/LimitParam'
      responses:
        '200':
          description: 'Account created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountList'
components:
  schemas:
    SessionVerificationRequest:
      description: 'Session verification request'
      type: object
      required:
        - token
      properties:
        token:
          type: string
    CreateSessionRequest:
      description: 'Login request'
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          minLength: 11
          maxLength: 11
        password:
          type: string
          minLength: 10
          maxLength: 128
    CreateAccountRequest:
      description: 'Create account request schema'
      required:
        - email
        - password
      type: object
      properties:
        verificationCode:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          $ref: '#/components/schemas/Role'
    Role:
      type: string
      enum: [ROOT, ADMIN, USER, SUB_ACCOUNT]
    UpdatePasswordRequest:
      type: object
      required:
        - password
        - newPassword
      properties:
        password:
          type: string
        newPassword:
          type: string
    Account:
      type: object
      required:
        - id
        - email
        - role
      properties:
        id:
          type: string
        email:
          type: string
        role:
          $ref: '#/components/schemas/Role'
    AccountList:
      description: 'Account list'
      type: object
      required:
        - data
        - pagination
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Account'
        pagination:
          $ref: '#/components/schemas/Pagination'
    Session:
      type: object
      required:
        - token
      properties:
        token:
          type: string
    Ordering:
      description: 'Ordering'
      type: string
      enum: [ASCENDING, DESCENDING]
    Pagination:
      description: 'Pagination'
      type: object
      required:
        - index
        - limit
        - total
      properties:
        index:
          type: integer
          format: int64
          description: 'Current page'
        limit:
          type: integer
          format: int64
          description: 'Amount per page'
        total:
          type: integer
          format: int64
          description: 'Total page'
  parameters:
    Ordering:
      name: ordering
      description: 'ASCENDING or DESCENDING'
      in: query
      schema:
        $ref: '#/components/schemas/Ordering'
    IndexParam:
      name: index
      in: query
      description: 'Current page index'
      schema:
        type: integer
        minimum: 0
        default: 0
    LimitParam:
      name: limit
      in: query
      description: 'Total pages'
      schema:
        type: integer
        minimum: 1
        default: 10
    ID:
      in: path
      name: id
      schema:
        type: string
      required: true
    StartAt:
      in: query
      name: startAt
      schema:
        type: integer
        format: int64
    EndAt:
      in: query
      name: endAt
      schema:
        type: integer
        format: int64